{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,UAAWC,SAASC,cAAc,UAClCC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBAOtC,SAASI,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KAELH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAbPT,EAAKC,UAAUgB,iBAAiB,SAiBhC,SAAoBC,GAClBA,EAAEC,iBACF,MAAMC,EAAQC,OAAOrB,EAAKI,WAAWkB,OAC/BC,EAAOF,OAAOrB,EAAKK,UAAUiB,OAC7BE,EAASH,OAAOrB,EAAKM,YAAYgB,OACvC,IAAIG,EAAW,EAEf,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAC/BD,GAAkB,IAANC,EAAUN,EAAQG,EAC9BhB,EAAcmB,EAAI,EAAGD,GAClBE,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqBtB,QAAiBC,UAE/DsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoBxB,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  submitBtn: document.querySelector('button'),\n  delayField: document.querySelector('input[name=\"delay\"]'),\n  stepField: document.querySelector('input[name=\"step\"]'),\n  amountField: document.querySelector('input[name=\"amount\"]')\n};\n\n// console.log(refs.amountField);\n\nrefs.submitBtn.addEventListener('click', onPressBtn);\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n\n      if (shouldResolve) {\n        resolve({ position, delay }); // Fulfill\n      } else {\n        reject({ position, delay }); // Reject\n      }     \n    }, delay);\n  });\n}\n\nfunction onPressBtn(e) {\n  e.preventDefault();\n  const delay = Number(refs.delayField.value);\n  const step = Number(refs.stepField.value);\n  const amount = Number(refs.amountField.value);\n  let delayCum = 0;\n\n  for (let i = 0; i < amount; i += 1) {\n    delayCum += i === 0 ? delay : step;\n    createPromise(i + 1, delayCum)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    // console.log(delayCum);\n  }\n    \n}\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","submitBtn","document","querySelector","delayField","stepField","amountField","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","step","amount","delayCum","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.37ef2a48.js.map"}